以下のコード変更を徹底的かつ効率的にレビューしてください。レビュー時間を最適化するため、重大な問題を優先してください。

## レビューチェック項目（優先度順）

### 1. 重大な問題（コミット前に必ず修正）
- 構文エラー、コンパイルエラー、型エラー
- ロジックエラー：off-by-one、境界条件、誤った早期リターン
- Null/undefined/Noneポインタ参照のリスク
- 配列・リストのインデックス範囲外アクセス
- ゼロ除算、整数オーバーフロー/アンダーフロー
- 無限ループの可能性
- SQLインジェクションの脆弱性
- XSS（クロスサイトスクリプティング）の脆弱性
- コマンドインジェクション、パストラバーサルのリスク
- ハードコードされた秘密情報、認証情報、APIキー
- 認証・認可チェックの欠落
- 重大なリソースリーク（ファイル、接続、ロックが閉じられていない）
- メモリリーク、use-after-free、double-free の問題
- 並行処理における競合状態、デッドロック

### 2. 重要な問題（修正すべき）
- 未定義変数、未使用変数・インポート
- エラーハンドリングの欠落または不十分
- 入力値の検証・サニタイゼーション不足
- 不適切な例外処理（広範囲すぎるcatch、エラーの無視）
- 後方互換性の破壊：
  - 関数・メソッドのシグネチャ変更
  - 戻り値の型・構造の変更
  - 公開APIの破壊的変更
  - デフォルト値の変更
  - 削除された機能
- 不適切な状態管理
- クリティカルパスでのnull/エラーチェックの欠落
- 並行処理の問題（スレッドセーフでない操作）

### 3. コード品質（改善すべき）
- パフォーマンスの問題：
  - アルゴリズムの計算量が悪い（より良い方法があるのにO(n²)以上）
  - ループ内での冗長な計算
  - 不要なオブジェクトコピーやメモリ確保
  - ユースケースに対して非効率なデータ構造
  - N+1クエリ問題
  - ループ内での非効率な文字列連結
- 命名規則の違反
- マジックナンバー（定数化されていない数値）
- 重複コードの存在
- 関数・メソッドの責務過多（単一責任原則違反）
- デッドコード（到達不可能なコードパス）
- 複雑なロジックのドキュメント不足
- 変更されたコードのテストカバレッジ不足
- エッジケースの処理漏れ

### 4. ベストプラクティス（あればよい改善）
- 軽微なコードスタイルの不一致
- より良い抽象化の機会
- 保守性向上のためのリファクタリング提案
- より説明的な変数名・関数名
- デバッグのための追加ログ

## 重要な指示

**重要：**
1. レビュー結果のセクションのみを出力してください - 説明、思考プロセス、前置き文は不要
2. 【変更内容】セクションから直接開始してください
3. すべてのセクションを日本語で出力してください
4. プレーンテキスト形式を使用してください（**, *, ` などのマークダウン記法は使わない）
5. 「収集した情報は」や「レビューを出力します」などのフレーズを含めないでください

## 必須出力形式（日本語）

以下の最初のセクションから直接開始してください：

【変更内容】
3-5行で説明:
- 何を変更したか
- なぜ変更したか
- 影響範囲

【指摘事項】
以下の形式で分類:
- [重大] 必ず修正が必要（Critical issues）
- [警告] 修正を推奨（Important issues）
- [提案] 改善提案（Quality/Best practices）

形式:
filename:line_number - 説明

[重大]または[警告]の場合は、説明の直後に修正コードを追加:

  ---Suggested Changes---
  修正後のコード
  -----------------------

[提案]レベルにはコード提案不要。
問題がない場合: 「問題は見つかりませんでした」

【レビュー結果】
最後に必ず以下のいずれか1行:
- Review-Result: OK（[重大][警告]が0個の場合）
- Review-Result: NG（[重大][警告]が1個以上ある場合）

---

## 出力例

例1 - 問題なしの場合:

【変更内容】
ユーザー認証機能にパスワード検証ロジックを追加しました。
セキュリティ強化のため、パスワードの長さと複雑性をチェックします。
影響範囲はログイン処理のみで、既存の認証フローは変更ありません。

【指摘事項】
問題は見つかりませんでした

【レビュー結果】
Review-Result: OK

例2 - 問題ありでコード提案がある場合:

【変更内容】
データベース接続処理を変更しました。
接続プール設定を追加し、パフォーマンス向上を図りました。

【指摘事項】
- [重大] db_manager.py:45 - 接続後にクローズ処理が抜けています。リソースリークの原因となります。

  ---Suggested Changes---
  conn = pool.get_connection()
  try:
      result = conn.execute(query)
      return result
  finally:
      conn.close()
  -----------------------

- [警告] db_manager.py:78 - SQL文字列に直接変数を埋め込んでいます。SQLインジェクションのリスクがあります。

  ---Suggested Changes---
  query = "SELECT * FROM users WHERE id = ?"
  cursor.execute(query, (user_id,))
  -----------------------

- [提案] db_manager.py:102 - マジックナンバー30を定数化することを推奨します。

【レビュー結果】
Review-Result: NG

---

## 変更差分
